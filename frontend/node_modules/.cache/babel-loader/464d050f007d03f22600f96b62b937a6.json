{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\PycharmProjects\\\\django-todo-react\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoItems = [{\n  id: 1,\n  title: \"Go to Market\",\n  description: \"Buy ingredients to prepare dinner\",\n  completed: true\n}, {\n  id: 2,\n  title: \"Study\",\n  description: \"Read Algebra and History textbook for the upcoming test\",\n  completed: false\n}, {\n  id: 3,\n  title: \"Sammy's books\",\n  description: \"Go to library to return Sammy's books\",\n  completed: true\n}, {\n  id: 4,\n  title: \"Article\",\n  description: \"Write article on how to use Django with React\",\n  completed: false\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav nav-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.viewCompleted ? 'nav-link active' : 'nav-link',\n          onClick: () => this.displayCompleted(true),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.viewCompleted ? 'nav-link' : 'nav-link active',\n          onClick: () => this.displayCompleted(false),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.todoList.filter(item => item.completed == viewCompleted);\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `todo-title mr-2 ${this.state.viewCompleted ? 'completed-todo' : ''}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-2\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this));\n    };\n\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sebastian/PycharmProjects/django-todo-react/frontend/src/App.js"],"names":["React","Component","todoItems","id","title","description","completed","App","constructor","props","displayCompleted","status","setState","viewCompleted","renderTabList","state","renderItems","newItems","todoList","filter","item","map","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nconst todoItems = [\n    {\n        id: 1,\n        title: \"Go to Market\",\n        description: \"Buy ingredients to prepare dinner\",\n        completed: true,\n    },\n    {\n        id: 2,\n        title: \"Study\",\n        description: \"Read Algebra and History textbook for the upcoming test\",\n        completed: false,\n    },\n    {\n        id: 3,\n        title: \"Sammy's books\",\n        description: \"Go to library to return Sammy's books\",\n        completed: true,\n    },\n    {\n        id: 4,\n        title: \"Article\",\n        description: \"Write article on how to use Django with React\",\n        completed: false,\n    },\n];\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewCompleted: false,\n            todoList: todoItems,\n        };\n    }\n\n    displayCompleted = (status) => {\n        if (status) {\n            return this.setState({viewCompleted: true});\n        }\n\n        return this.setState({viewCompleted: false});\n    };\n\n    renderTabList = () => {\n        return (\n            <div className='nav nav-tabs'>\n          <span\n              className={this.state.viewCompleted ? 'nav-link active' : 'nav-link'}\n              onClick={() => this.displayCompleted(true)}\n          >Complete\n          </span>\n                <span\n                    className={this.state.viewCompleted ? 'nav-link' : 'nav-link active'}\n                    onClick={() => this.displayCompleted(false)}\n                >\n                    Incomplete\n                </span>\n            </div>\n        );\n    };\n\n    renderItems = () => {\n        const {viewCompleted} = this.state;\n        const newItems = this.state.todoList.filter(\n            (item) => item.completed == viewCompleted\n        );\n\n        return newItems.map((item) => (\n            <li\n                key={item.id}\n                className='list-group-item d-flex justify-content-between align-items-center'\n            >\n                <span\n                    className={`todo-title mr-2 ${\n                        this.state.viewCompleted ? 'completed-todo' : ''\n                    }`}\n                    title={item.description}\n                >\n                    {item.title}\n                </span>\n                <span>\n                    <button className='btn btn-secondary mr-2'\n                    >\n                        Edit\n                    </button>\n                    <button\n                        className='btn btn-danger'\n                    >\n                        Delete\n                    </button>\n                </span>\n            </li>\n        ));\n    };\n\n    render() {\n        return (\n            <main className='container'>\n                <h1 className='text-white text-uppercase text-center my-4'>Todo app</h1>\n                <div className='row'>\n                    <div className='col-md-6 col-sm-10 mx-auto p-0'>\n                        <div className='card p-3'>\n                            <div className='mb-4'>\n                                <button className='btn btn-primary'\n                                        >\n                                    Add task\n                                </button>\n                            </div>\n                            {this.renderTabList()}\n                            <ul className='list-group list-group-flush border-top-0'>\n                                {this.renderItems()}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}