{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\PycharmProjects\\\\django-todo-react\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Modal from './components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoItems = [{\n  id: 1,\n  title: \"Go to Market\",\n  description: \"Buy ingredients to prepare dinner\",\n  completed: true\n}, {\n  id: 2,\n  title: \"Study\",\n  description: \"Read Algebra and History textbook for the upcoming test\",\n  completed: false\n}, {\n  id: 3,\n  title: \"Sammy's books\",\n  description: \"Go to library to return Sammy's books\",\n  completed: true\n}, {\n  id: 4,\n  title: \"Article\",\n  description: \"Write article on how to use Django with React\",\n  completed: false\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n      alert('save' + JSON.stringify(item));\n    };\n\n    this.handleDelete = item => {\n      alert('delete' + JSON.stringify(item));\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: '',\n        description: '',\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav nav-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.viewCompleted ? 'nav-link active' : 'nav-link',\n          onClick: () => this.displayCompleted(true),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.viewCompleted ? 'nav-link' : 'nav-link active',\n          onClick: () => this.displayCompleted(false),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted);\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `todo-title mr-2 ${this.state.viewCompleted ? 'completed-todo' : ''}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-2\",\n            onClick: () => this.editItem(item),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => this.handleDelete(item),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this));\n    };\n\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems,\n      modal: false,\n      activeItem: {\n        title: '',\n        description: '',\n        completed: false\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: () => this.createItem(),\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sebastian/PycharmProjects/django-todo-react/frontend/src/App.js"],"names":["React","Component","Modal","todoItems","id","title","description","completed","App","constructor","props","toggle","setState","modal","state","handleSubmit","item","alert","JSON","stringify","handleDelete","createItem","activeItem","editItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","newItems","todoList","filter","map","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Modal from './components/Modal';\n\nconst todoItems = [\n    {\n        id: 1,\n        title: \"Go to Market\",\n        description: \"Buy ingredients to prepare dinner\",\n        completed: true,\n    },\n    {\n        id: 2,\n        title: \"Study\",\n        description: \"Read Algebra and History textbook for the upcoming test\",\n        completed: false,\n    },\n    {\n        id: 3,\n        title: \"Sammy's books\",\n        description: \"Go to library to return Sammy's books\",\n        completed: true,\n    },\n    {\n        id: 4,\n        title: \"Article\",\n        description: \"Write article on how to use Django with React\",\n        completed: false,\n    },\n];\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewCompleted: false,\n            todoList: todoItems,\n            modal: false,\n            activeItem: {\n                title: '',\n                description: '',\n                completed: false,\n            },\n        };\n    }\n\n    toggle = () => {\n        this.setState({modal: !this.state.modal});\n    };\n\n    handleSubmit = (item) => {\n        this.toggle();\n\n        alert('save' + JSON.stringify(item))\n    };\n\n    handleDelete = (item) => {\n        alert('delete' + JSON.stringify(item))\n    };\n\n    createItem = () => {\n        const item = {title: '', description: '', completed: false};\n\n        this.setState({activeItem: item, modal: !this.state.modal});\n    };\n\n    editItem = (item) => {\n        this.setState({activeItem: item, modal: !this.state.modal});\n    };\n\n    displayCompleted = (status) => {\n        if (status) {\n            return this.setState({viewCompleted: true});\n        }\n\n        return this.setState({viewCompleted: false});\n    };\n\n    renderTabList = () => {\n        return (\n            <div className='nav nav-tabs'>\n          <span\n              className={this.state.viewCompleted ? 'nav-link active' : 'nav-link'}\n              onClick={() => this.displayCompleted(true)}\n          >Complete\n          </span>\n                <span\n                    className={this.state.viewCompleted ? 'nav-link' : 'nav-link active'}\n                    onClick={() => this.displayCompleted(false)}\n                >\n                    Incomplete\n                </span>\n            </div>\n        );\n    };\n\n    renderItems = () => {\n        const {viewCompleted} = this.state;\n        const newItems = this.state.todoList.filter(\n            (item) => item.completed === viewCompleted\n        );\n\n        return newItems.map((item) => (\n            <li\n                key={item.id}\n                className='list-group-item d-flex justify-content-between align-items-center'\n            >\n                <span\n                    className={`todo-title mr-2 ${\n                        this.state.viewCompleted ? 'completed-todo' : ''\n                    }`}\n                    title={item.description}\n                >\n                    {item.title}\n                </span>\n                <span>\n                    <button className='btn btn-secondary mr-2'\n                            onClick={() => this.editItem(item)}\n                    >\n                        Edit\n                    </button>\n                    <button\n                        className='btn btn-danger'\n                        onClick={() => this.handleDelete(item)}\n                    >\n                        Delete\n                    </button>\n                </span>\n            </li>\n        ));\n    };\n\n    render() {\n        return (\n            <main className='container'>\n                <h1 className='text-white text-uppercase text-center my-4'>Todo app</h1>\n                <div className='row'>\n                    <div className='col-md-6 col-sm-10 mx-auto p-0'>\n                        <div className='card p-3'>\n                            <div className='mb-4'>\n                                <button className='btn btn-primary'\n                                        onClick={() => this.createItem()}\n                                >\n                                    Add task\n                                </button>\n                            </div>\n                            {this.renderTabList()}\n                            <ul className='list-group list-group-flush border-top-0'>\n                                {this.renderItems()}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                {this.state.modal ? (\n                    <Modal\n                        activeItem={this.state.activeItem}\n                        toggle={this.toggle}\n                        onSave={this.handleSubmit}\n                    />\n                ) : null}\n            </main>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}