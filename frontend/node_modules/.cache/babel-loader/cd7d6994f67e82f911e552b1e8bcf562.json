{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\PycharmProjects\\\\django-todo-react\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Modal from './components/Modal';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get('/api/todos/').then(res => this.setState({\n        todoList: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        axios.put(`/api/todos/${item.id}/`, item).then(res => this.refreshList());\n        return;\n      }\n\n      axios.post('/api/todos/', item).then(res => this.refreshList());\n    };\n\n    this.handleDelete = item => {\n      axios.delete(`/api/todos/${item.id}/`).then(res => this.refreshList());\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: '',\n        description: '',\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav nav-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.viewCompleted ? 'nav-link active' : 'nav-link',\n          onClick: () => this.displayCompleted(true),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.viewCompleted ? 'nav-link' : 'nav-link active',\n          onClick: () => this.displayCompleted(false),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted);\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `todo-title mr-2 ${this.state.viewCompleted ? 'completed-todo' : ''}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-2\",\n            onClick: () => this.editItem(item),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => this.handleDelete(item),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this));\n    };\n\n    this.state = {\n      viewCompleted: false,\n      todoList: [],\n      modal: false,\n      activeItem: {\n        title: '',\n        description: '',\n        completed: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: () => this.createItem(),\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sebastian/PycharmProjects/django-todo-react/frontend/src/App.js"],"names":["React","Component","Modal","axios","App","constructor","props","refreshList","get","then","res","setState","todoList","data","catch","err","console","log","toggle","modal","state","handleSubmit","item","id","put","post","handleDelete","delete","createItem","title","description","completed","activeItem","editItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","newItems","filter","map","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Modal from './components/Modal';\nimport axios from 'axios';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewCompleted: false,\n            todoList: [],\n            modal: false,\n            activeItem: {\n                title: '',\n                description: '',\n                completed: false,\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        axios\n            .get('/api/todos/')\n            .then((res) => this.setState({ todoList: res.data}))\n            .catch((err) => console.log(err));\n    };\n\n    toggle = () => {\n        this.setState({modal: !this.state.modal});\n    };\n\n    handleSubmit = (item) => {\n        this.toggle();\n\n        if (item.id) {\n            axios\n                .put(`/api/todos/${item.id}/`, item)\n                .then((res) => this.refreshList());\n            return;\n        }\n        axios\n            .post('/api/todos/', item)\n            .then((res) => this.refreshList());\n    };\n\n    handleDelete = (item) => {\n        axios\n            .delete(`/api/todos/${item.id}/`)\n            .then((res) => this.refreshList());\n    };\n\n    createItem = () => {\n        const item = {title: '', description: '', completed: false};\n\n        this.setState({activeItem: item, modal: !this.state.modal});\n    };\n\n    editItem = (item) => {\n        this.setState({activeItem: item, modal: !this.state.modal});\n    };\n\n    displayCompleted = (status) => {\n        if (status) {\n            return this.setState({viewCompleted: true});\n        }\n\n        return this.setState({viewCompleted: false});\n    };\n\n    renderTabList = () => {\n        return (\n            <div className='nav nav-tabs'>\n          <span\n              className={this.state.viewCompleted ? 'nav-link active' : 'nav-link'}\n              onClick={() => this.displayCompleted(true)}\n          >Complete\n          </span>\n                <span\n                    className={this.state.viewCompleted ? 'nav-link' : 'nav-link active'}\n                    onClick={() => this.displayCompleted(false)}\n                >\n                    Incomplete\n                </span>\n            </div>\n        );\n    };\n\n    renderItems = () => {\n        const {viewCompleted} = this.state;\n        const newItems = this.state.todoList.filter(\n            (item) => item.completed === viewCompleted\n        );\n\n        return newItems.map((item) => (\n            <li\n                key={item.id}\n                className='list-group-item d-flex justify-content-between align-items-center'\n            >\n                <span\n                    className={`todo-title mr-2 ${\n                        this.state.viewCompleted ? 'completed-todo' : ''\n                    }`}\n                    title={item.description}\n                >\n                    {item.title}\n                </span>\n                <span>\n                    <button className='btn btn-secondary mr-2'\n                            onClick={() => this.editItem(item)}\n                    >\n                        Edit\n                    </button>\n                    <button\n                        className='btn btn-danger'\n                        onClick={() => this.handleDelete(item)}\n                    >\n                        Delete\n                    </button>\n                </span>\n            </li>\n        ));\n    };\n\n    render() {\n        return (\n            <main className='container'>\n                <h1 className='text-white text-uppercase text-center my-4'>Todo app</h1>\n                <div className='row'>\n                    <div className='col-md-6 col-sm-10 mx-auto p-0'>\n                        <div className='card p-3'>\n                            <div className='mb-4'>\n                                <button className='btn btn-primary'\n                                        onClick={() => this.createItem()}\n                                >\n                                    Add task\n                                </button>\n                            </div>\n                            {this.renderTabList()}\n                            <ul className='list-group list-group-flush border-top-0'>\n                                {this.renderItems()}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                {this.state.modal ? (\n                    <Modal\n                        activeItem={this.state.activeItem}\n                        toggle={this.toggle}\n                        onSave={this.handleSubmit}\n                    />\n                ) : null}\n            </main>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}