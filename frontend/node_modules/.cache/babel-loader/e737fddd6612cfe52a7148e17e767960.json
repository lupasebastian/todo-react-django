{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\PycharmProjects\\\\django-todo-react\\\\frontend\\\\src\\\\components\\\\Modal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.type === 'checkbox') {\n        value = e.target.checked;\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Todo Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"todo-title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"todo-title\",\n              name: \"title\",\n              value: this.state.activeItem.title,\n              onChange: this.handleChange,\n              placeholder: \"Enter Todo Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              check: true,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"checkbox\",\n                name: \"completed\",\n                checked: this.state.activeItem.completed,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), \"Completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => onSave(this.state.activeItem),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sebastian/PycharmProjects/django-todo-react/frontend/src/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","handleChange","e","name","value","target","type","checked","activeItem","state","setState","render","toggle","onSave","title","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAMIC,IANJ,EAOIC,SAPJ,EAQIC,KARJ,EASIC,KATJ,QAUO,YAVP;;AAYA,eAAe,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AAC/CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOHC,CAAD,IAAO;AAClB,UAAI;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBF,CAAC,CAACG,MAAtB;;AAEA,UAAIH,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAC9BF,QAAAA,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASE,OAAjB;AACH;;AAED,YAAMC,UAAU,GAAG,EAAC,GAAG,KAAKC,KAAL,CAAWD,UAAf;AAA2B,SAACL,IAAD,GAAQC;AAAnC,OAAnB;AAEA,WAAKM,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACH,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAE,KAAKR,KAAL,CAAWQ;AADd,KAAb;AAGH;;AAcDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmB,KAAKb,KAA9B;AAEA,wBACI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE,IAAf;AAAqB,MAAA,MAAM,EAAEY,MAA7B;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,SAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,EAAE,EAAC,YAFP;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,KAAK,EAAE,KAAKH,KAAL,CAAWD,UAAX,CAAsBM,KAJjC;AAKI,cAAA,QAAQ,EAAE,KAAKb,YALnB;AAMI,cAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI,QAAC,SAAD;AAAW,YAAA,KAAK,MAAhB;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAA,sCACI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,UADT;AAEI,gBAAA,IAAI,EAAC,WAFT;AAGI,gBAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWD,UAAX,CAAsBO,SAHnC;AAII,gBAAA,QAAQ,EAAE,KAAKd;AAJnB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eA4BI,QAAC,WAAD;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAE,MAAMY,MAAM,CAAC,KAAKJ,KAAL,CAAWD,UAAZ,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuCH;;AA9D8C","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n} from 'reactstrap';\r\n\r\nexport default class CustomModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: this.props.activeItem,\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n\r\n        if (e.target.type === 'checkbox') {\r\n            value = e.target.checked;\r\n        }\r\n\r\n        const activeItem = {...this.state.activeItem, [name]: value};\r\n\r\n        this.setState({activeItem});\r\n    };\r\n\r\n    render() {\r\n        const {toggle, onSave} = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={true} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for='todo-title'>Title</Label>\r\n                            <Input\r\n                                type='text'\r\n                                id='todo-title'\r\n                                name='title'\r\n                                value={this.state.activeItem.title}\r\n                                onChange={this.handleChange}\r\n                                placeholder='Enter Todo Title'\r\n                                />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input\r\n                                    type='checkbox'\r\n                                    name='completed'\r\n                                    checked={this.state.activeItem.completed}\r\n                                    onChange={this.handleChange}\r\n                                    />\r\n                                    Completed\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color='success'\r\n                        onClick={() => onSave(this.state.activeItem)}\r\n                        >\r\n                        Save\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}